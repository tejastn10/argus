name: Build and Publish Docker Image

on:
  push:
    tags:
      - "v*.*.*" # Trigger the workflow when a version tag is pushed

env:
  REGISTRY_DOCKERHUB: docker.io
  REGISTRY_GHCR: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating releases
      packages: write # Needed for GHCR

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub using secrets (DOCKER_USERNAME and DOCKER_PASSWORD
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      # Extract metadata for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_DOCKERHUB }}/${{ github.repository }}
            ${{ env.REGISTRY_GHCR }}/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Create GitHub Release
      - name: Generate Release Notes
        id: release-notes
        run: |
          echo "# Argus ${{ github.ref_name }} ðŸš€" >> release-notes.md
          echo "" >> release-notes.md
          echo "## Highlights" >> release-notes.md
          echo "" >> release-notes.md
          echo "## Changelog" >> release-notes.md
          echo "" >> release-notes.md
          echo "## Docker Images" >> release-notes.md
          echo "- \`${{ env.REGISTRY_DOCKERHUB }}/${{ github.repository }}:${{ github.ref_name }}\`" >> release-notes.md
          echo "- \`${{ env.REGISTRY_GHCR }}/${{ github.repository }}:${{ github.ref_name }}\`" >> release-notes.md
          echo "" >> release-notes.md
          echo "## Supported Platforms" >> release-notes.md
          echo "- linux/amd64" >> release-notes.md
          echo "- linux/arm64" >> release-notes.md
          echo "" >> release-notes.md
          echo "## How to Use" >> release-notes.md
          echo "" >> release-notes.md
          echo "- Pull the latest Docker image:" >> release-notes.md
          echo "  \`\`\`bash" >> release-notes.md
          echo "  docker pull ${{ env.REGISTRY_DOCKERHUB }}/${{ github.repository }}:latest" >> release-notes.md
          echo "  \`\`\`" >> release-notes.md
          echo "- Or use a specific version:" >> release-notes.md
          echo "  \`\`\`bash" >> release-notes.md
          echo "  docker pull ${{ env.REGISTRY_DOCKERHUB }}/${{ github.repository }}:${{ github.ref_name }}" >> release-notes.md
          echo "  \`\`\`" >> release-notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          body_path: release-notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
